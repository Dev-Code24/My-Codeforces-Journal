var P=(s,e,o)=>new Promise((n,a)=>{var i=r=>{try{d(o.next(r))}catch(c){a(c)}},b=r=>{try{d(o.throw(r))}catch(c){a(c)}},d=r=>r.done?n(r.value):Promise.resolve(r.value).then(i,b);d((o=o.apply(s,e)).next())});import{s as _,g as L,b as C,a as A}from"./axios.js";function O(s,e){return s.filter(o=>{const n=e.verdict?o.verdict===e.verdict:!0,a=e.contestId?o.contestId===e.contestId:!0,i=e.index?o.problem.index===e.index:!0;return n&&a&&i})}function v(s,e){return P(this,null,function*(){_.get(["APP_SCRIPT_URL","CODEFORCES_ID","CURRENT_TAB_URL"],o=>P(this,null,function*(){const{APP_SCRIPT_URL:n,CODEFORCES_ID:a,CURRENT_TAB_URL:i}=o,b=L.replace("CODEFORCES_ID",a),d=`${n}?action=checkProblem`;let r=!1;try{const c=yield fetch(b);let m,u;if(c.ok){const l=yield c.json();if((l==null?void 0:l.status)==="OK"){const t=i.split("/"),f=t.length,g=[t[f-1],t[f-2],t[f-3]];if(g.sort(),m={verdict:"OK",contestId:Number(g[0]),index:g[1]},u=O(l.result,m),r=u.length>0,!r){const R="Solve the problem first, then submit!";console.error(R),e(R,!1);return}}else{const t="Failed to fetch Problem details!";console.error(t),e(t,!1);return}const h=u[0].problem,U=h.rating||"N/A",S=`Problem${h.contestId}${h.index}`,x=h.tags.join(", "),y=new Date(u[0].creationTimeSeconds*1e3).toLocaleDateString("en-GB",{day:"numeric",month:"short",year:"numeric"}).replace(/ /g,"-");if((yield C.post(d,{action:"checkProblem",problemName:S},{headers:{"Content-Type":"text/plain"}})).data.exists){const t="Problem already exists in the spreadsheet!";console.log(t),e(t,!1);return}const E={action:"addProblem",problemRating:U,problemName:S,problemStatus:s.status,remarks:s.remarks,dateSolved:y,takeaways:s.takeaways,problemTopics:x,problemUrl:i},I=n.split("/")[5],T=A.replace("SECRET_HASH",I),p=yield C.post(T,E,{headers:{"Content-Type":"text/plain"}});if(p.status===200&&p.data.status==="success"){const t="Problem data successfully added to your Spreadsheet!";console.log(t),e(t,!0)}else{const t=`Failed to add problem data: ${p.data.message}`;console.error(t),e(t,!1)}}else{const l="Failed to fetch Problem details!";console.error(l),e(l,!1)}}catch(c){const m=`An error occurred while adding the problem: ${c}`;console.error(m),e(m,!1)}}))})}chrome.runtime.onInstalled.addListener(()=>{console.log("Extension installed.")});chrome.runtime.onMessage.addListener(s=>{s==="reload-extension"&&chrome.runtime.reload()});chrome.tabs.onUpdated.addListener((s,e,o)=>{e.url&&console.log("Tab URL changed to:",e.url)});chrome.action.onClicked.addListener(s=>{chrome.tabs.sendMessage(s.id,{action:"openModal"})});chrome.runtime.onMessage.addListener((s,e,o)=>{if(s.action==="submitProblem")return v(s.data,(n,a)=>{o(a?{status:"success",result:n}:{status:"error",error:n})}),!0});
